<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CalculosCrearMensaje" xml:space="preserve">
    <value>An integer in base {0} will be divisible by {1} if </value>
    <comment>Appears after the type of rule and before the description.</comment>
  </data>
  <data name="CalculosExtendidaMensajeExceso" xml:space="preserve">
    <value>Result is too large</value>
  </data>
  <data name="CalculosExtendidaMensajeFracaso" xml:space="preserve">
    <value>Could not find an alternative rule, apply the coefficient rule if possible.</value>
  </data>
  <data name="CalculosExtendidaMensajeCero" xml:space="preserve">
    <value>Divisibility cannot be applied to zero.</value>
  </data>
  <data name="CalculosExtendidaMensajeCifrasPrincipio" xml:space="preserve">
    <value> is composed of powers of the prime factors of </value>
    <comment>Is placed after the divisor and before the base, all these messages are divided into two to avoid repeating CrearMensaje in every single one</comment>
  </data>
  <data name="CalculosExtendidaMensajeCifrasFinal" xml:space="preserve">
    <value>its first {0} digits are a multiple of </value>
    <comment>After CrearMensaje and before the divisor</comment>
  </data>
  <data name="CalculosExtendidaMensajeUno" xml:space="preserve">
    <value>All integers are divisible by one.</value>
  </data>
  <data name="CalculosExtendidaRestarPrincipio" xml:space="preserve">
    <value> is a divisor of {0} to the power of {1} plus one ({2})</value>
    <comment>Like CifrasPrincipio</comment>
  </data>
  <data name="CalculosExtendidaRestarFinal" xml:space="preserve">
    <value>after separating its digits in groups of {0} beginning at the unit digit, the difference of the sum of the even groups and the odd groups is a multiple of </value>
    <comment>Like CifrasFinal</comment>
  </data>
  <data name="CalculosExtendidaSumarPrincipio" xml:space="preserve">
    <value> is a divisor of {0} to the power of {1} minus one ({2})</value>
    <comment>Very similar to RestarPrincipio</comment>
  </data>
  <data name="CalculosExtendidaSumarFinal" xml:space="preserve">
    <value>after separating its digits in groups of {0} beginning at the unit digit, the sum of the groups is a multiple of </value>
    <comment>Very similar to RestarFinal</comment>
  </data>
  <data name="CalculosValorUnoRestarPrincipio" xml:space="preserve">
    <value> is a divisor of {0} plus one</value>
    <comment>Like Extendida</comment>
  </data>
  <data name="CalculosValorUnoRestarFinal" xml:space="preserve">
    <value>the difference of the sum of the digits in even positions and the ones in odd positions is a multiple of </value>
    <comment>Like Extendida</comment>
  </data>
  <data name="CalculosValorUnoSumarPrincipio" xml:space="preserve">
    <value> is a divisor of {0} minus one</value>
    <comment>LikeExtendida</comment>
  </data>
  <data name="CalculosValorUnoSumarFinal" xml:space="preserve">
    <value>the sum of its digits is a multiple of </value>
  </data>
  <data name="ReglaDivisorNegativoError" xml:space="preserve">
    <value>The divisor cannot be negative</value>
  </data>
  <data name="ReglaBaseMenorError" xml:space="preserve">
    <value>The base must be greater than one</value>
  </data>
  <data name="ReglaVaciaError" xml:space="preserve">
    <value>The given rule was empty</value>
  </data>
</root>