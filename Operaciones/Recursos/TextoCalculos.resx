<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CalculosCrearMensaje" xml:space="preserve">
    <value>An integer in base {0} will be divisible by {1} if </value>
    <comment>Appears after the type of rule and before the description.</comment>
  </data>
  <data name="CalculosExtendidaMensajeExceso" xml:space="preserve">
    <value>Error while calculating, might be too large</value>
  </data>
  <data name="CalculosExtendidaMensajeFracaso" xml:space="preserve">
    <value>Could not find an alternative rule, apply the coefficient rule if possible.</value>
  </data>
  <data name="CalculosExtendidaMensajeCero" xml:space="preserve">
    <value>Divisibility cannot be applied to zero.</value>
  </data>
  <data name="CalculosExtendidaMensajeCifrasPrincipio" xml:space="preserve">
    <value>{0} is composed of powers of the prime factors of {1}.</value>
    <comment>Is placed after the divisor and before the base, all these messages are divided into two to avoid repeating CrearMensaje in every single one</comment>
  </data>
  <data name="CalculosExtendidaMensajeCifrasFinal" xml:space="preserve">
    <value>its first {0} digits are a multiple of </value>
    <comment>After CrearMensaje and before the divisor</comment>
  </data>
  <data name="CalculosExtendidaMensajeUno" xml:space="preserve">
    <value>All integers are divisible by one.</value>
  </data>
  <data name="CalculosExtendidaRestarPrincipio" xml:space="preserve">
    <value>{0} is a divisor of {1} to the power of {2} plus one ({3}).</value>
    <comment>Like CifrasPrincipio</comment>
  </data>
  <data name="CalculosExtendidaRestarFinal" xml:space="preserve">
    <value>after separating its digits in groups of {0} beginning at the unit digit, the difference of the sum of the even groups and the odd groups is a multiple of </value>
    <comment>Like CifrasFinal</comment>
  </data>
  <data name="CalculosExtendidaSumarPrincipio" xml:space="preserve">
    <value>{0} is a divisor of {1} to the power of {2} minus one ({3}).</value>
    <comment>Very similar to RestarPrincipio</comment>
  </data>
  <data name="CalculosExtendidaSumarFinal" xml:space="preserve">
    <value>after separating its digits in groups of {0} beginning at the unit digit, the sum of the groups is a multiple of </value>
    <comment>Very similar to RestarFinal</comment>
  </data>
  <data name="CalculosValorUnoRestarPrincipio" xml:space="preserve">
    <value> is a divisor of {0} plus one</value>
    <comment>Like Extendida</comment>
  </data>
  <data name="CalculosValorUnoRestarFinal" xml:space="preserve">
    <value>the difference of the sum of the digits in even positions and the ones in odd positions is a multiple of </value>
    <comment>Like Extendida</comment>
  </data>
  <data name="CalculosValorUnoSumarPrincipio" xml:space="preserve">
    <value> is a divisor of {0} minus one</value>
    <comment>LikeExtendida</comment>
  </data>
  <data name="CalculosValorUnoSumarFinal" xml:space="preserve">
    <value>the sum of its digits is a multiple of </value>
  </data>
  <data name="ReglaDivisorNegativoError" xml:space="preserve">
    <value>The divisor cannot be negative</value>
  </data>
  <data name="ReglaBaseMenorError" xml:space="preserve">
    <value>The base must be greater than one</value>
  </data>
  <data name="ReglaVaciaError" xml:space="preserve">
    <value>The given rule was empty</value>
  </data>
  <data name="MensajeAplicarInicio" xml:space="preserve">
    <value>Applying the divisibility rule of {0} in base {1} to {2}, with {3} coefficients:</value>
    <comment>0 is the divisor
2 is the dividend</comment>
  </data>
  <data name="MensajeAplicarSeparar" xml:space="preserve">
    <value>Step one: separate the number into two parts the right one has length {0}:
Left: {1}
Right: {2}</value>
  </data>
  <data name="MensajeAplicarMultiplicarCoeficientes" xml:space="preserve">
    <value>Step two: multiply each digit in the right part by the coefficient in the same position:</value>
  </data>
  <data name="MensajeAplicarProductoCoeficiente" xml:space="preserve">
    <value>Results:</value>
  </data>
  <data name="MensajeAplicarSuma" xml:space="preserve">
    <value>Step three: add the sum of the products and the left part of the dividend:</value>
  </data>
  <data name="MensajeAplicarFin" xml:space="preserve">
    <value>{0} is divisible by {1}, therefore the original dividend, {2}, also is.</value>
  </data>
  <data name="MensajeAplicarFinNoDivisible" xml:space="preserve">
    <value>{0} is not divisible by {1}, therefore the original dividend, {2}, also isn't.</value>
  </data>
  <data name="MensajeAplicarFinPorTamaño" xml:space="preserve">
    <value>The divisibility of {0} is estimated to be easily calculated.</value>
  </data>
  <data name="MensajeAplicarMinimoEncontrado" xml:space="preserve">
    <value>The last dividend, {0}, was not lesser than the previous one, {1}.
Two more iterations will be attempted.</value>
  </data>
  <data name="MensajeAlfabetoNumericoExito" xml:space="preserve">
    <value>The numbers related to the dividend will be represented naturally in base {0} to facilitate reading using the following digits:</value>
  </data>
  <data name="MensajeAlfabetoNumericoExceso" xml:space="preserve">
    <value>The base is too large to represent naturally, numbers will be represented by the value of their digits in base ten.</value>
  </data>
  <data name="MensajeAplicarParteDerechaPequeña" xml:space="preserve">
    <value>The dividend, {0}, is to small for this rule, use the first coefficients, starting from the left.</value>
  </data>
  <data name="ReglaExpliacadaCoeficientes" xml:space="preserve">
    <value>The dividend will be divisible by {0} if, and only if, the sum of the products of each coefficient with the digit from the dividend in base {1} in the same position, starting from the right removing each digit used, added to the rest of the rest of the dividend is divisible by {0}.</value>
  </data>
  <data name="ReglaExplicadaCero" xml:space="preserve">
    <value>No rule can be created, divisibility is not applicable with divisor zero.</value>
  </data>
  <data name="ReglaConstructorRestriccionCero" xml:space="preserve">
    <value>For this type, the divisor must be zero.</value>
  </data>
  <data name="ReglaConstructorRestriccionUno" xml:space="preserve">
    <value>For this type, the divisor must be one.</value>
  </data>
  <data name="ReglaExplicadaUno" xml:space="preserve">
    <value>No rule is necessary, all integers are divisible by one.</value>
  </data>
  <data name="ReglaExplicadaCifras" xml:space="preserve">
    <value>The dividend will be divisible by {0} if, and only if, its last {1} digits in base {2} are divisible by {0}.</value>
  </data>
  <data name="ReglaExplicadaSumar" xml:space="preserve">
    <value>The dividend will be divisible by {0} if, and only if, the sum of all the digits in base {1} split into groups of {2} digits, starting at its units digit is also divisible by {0}.</value>
  </data>
  <data name="ReglaExplicadaRestar" xml:space="preserve">
    <value>The dividend will be divisible by {0} if, and only if, the difference of the sums of all the even and odd groups of digits in base {1} of {2} digits, starting at its units digit is also divisible by {0}.</value>
  </data>
  <data name="MensajeAplicarCifrasSeparar" xml:space="preserve">
    <value>Keep only the least {0} significant digits: {1}</value>
  </data>
  <data name="MensajeAplicarCifrasInicio" xml:space="preserve">
    <value>Applying the divisibility rule of {0}, in base {1} to {2}, using {3} digits:</value>
  </data>
  <data name="MensajeAplicarFinDemasiadoGrande" xml:space="preserve">
    <value>{0} might be too large to easily determine its divisibility by {1}, but the rule cannot be applied further or may not give better results.</value>
  </data>
  <data name="MensajePosiblesCifras" xml:space="preserve">
    <value>The result must be one of these numbers, written in base {1}:
{0}</value>
  </data>
  <data name="MensajeAplicarNumero" xml:space="preserve">
    <value>The dividend, {2}, represented in base {0} is {1}.</value>
  </data>
  <data name="MensajeAplicarRestaInicio" xml:space="preserve">
    <value>Applying the divisibility rule of {0}, in base {1} to {2}, using groups of {3} digits:</value>
  </data>
  <data name="MensajeAplicarRestaBloques" xml:space="preserve">
    <value>Step one: separate the dividend in groups of {0} digits from the units digit, separating those in even positions from those in odd positions:
Odd groups: {1}
Even groups: {2}</value>
  </data>
  <data name="MensajeAplicarRestaSuma" xml:space="preserve">
    <value>Step two: add all the groups from the same group.
Sum of the odd groups: {0}
Sum of the even groups: {1}</value>
  </data>
  <data name="MensajeAplicarRestaResta" xml:space="preserve">
    <value>Step three: get the result of substracting both sums: {0}
Can be substracted in any order, its sign won't affect the result.</value>
  </data>
  <data name="MensajeAplicarRepeticion" xml:space="preserve">
    <value>{0} might be too large to easily determine its divisibility. Apply the rule again using {0} as the dividend.</value>
  </data>
  <data name="MensajeAplicarSumaBloques" xml:space="preserve">
    <value>Step one: separate the dividend into groups of {0} digits, starting at the units.
Groups: {1}</value>
  </data>
  <data name="MensajeAplicarSumaSuma" xml:space="preserve">
    <value>Step two: add all the groups of digits as numbers and use the result: {0}</value>
  </data>
  <data name="MensajeAplicarDividendoIgual" xml:space="preserve">
    <value>The rule did not change the dividend, {0}, cannot reduce further.</value>
  </data>
  <data name="ReglaExplicadaCompuesta" xml:space="preserve">
    <value>The dividend will be divisible by {0} if, and only if, it is divisible by all of its prime factors at their respective powers.</value>
  </data>
  <data name="MensajeAplicarInicioCompuesto" xml:space="preserve">
    <value>Applying the divisibility rules of {0} in base {1} to {2}:</value>
  </data>
  <data name="MensajeAplicarCompuestaFracaso" xml:space="preserve">
    <value>{0} isn't divisible by all the prime factors of {1}, therefore, it is not divisible by {1}.</value>
  </data>
  <data name="MensajeAplicarCompuestaExito" xml:space="preserve">
    <value>{0} is divisible by all the prime factors of {1}, therefore, it is divisible by {1}.</value>
  </data>
  <data name="MensajeCifrasDemasiadas" xml:space="preserve">
    <value>Too many possible combinations, {0}, returning none to avoid memory limitations.</value>
  </data>
  <data name="MensajeErrorNinguno" xml:space="preserve">
    <value>No error.</value>
  </data>
  <data name="MensajeErrorDemasiadasPosibilidades" xml:space="preserve">
    <value>Too many possible last digits, none returned.</value>
  </data>
  <data name="MensajeErrorCoeficientes" xml:space="preserve">
    <value>The base and divisor are not coprime, rule should not be returned.</value>
  </data>
</root>