//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Operaciones.Recursos {
    using System;
    
    
    /// <summary>
    ///   Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
    /// </summary>
    // StronglyTypedResourceBuilder generó automáticamente esta clase
    // a través de una herramienta como ResGen o Visual Studio.
    // Para agregar o quitar un miembro, edite el archivo .ResX y, a continuación, vuelva a ejecutar ResGen
    // con la opción /str o recompile su proyecto de VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class TextoCalculos {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TextoCalculos() {
        }
        
        /// <summary>
        ///   Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Operaciones.Recursos.TextoCalculos", typeof(TextoCalculos).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
        ///   búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a An integer in base {0} will be divisible by {1} if .
        /// </summary>
        public static string CalculosCrearMensaje {
            get {
                return ResourceManager.GetString("CalculosCrearMensaje", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Divisibility cannot be applied to zero..
        /// </summary>
        public static string CalculosExtendidaMensajeCero {
            get {
                return ResourceManager.GetString("CalculosExtendidaMensajeCero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a its first {0} digits are a multiple of .
        /// </summary>
        public static string CalculosExtendidaMensajeCifrasFinal {
            get {
                return ResourceManager.GetString("CalculosExtendidaMensajeCifrasFinal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a {0} is composed of powers of the prime factors of {1}..
        /// </summary>
        public static string CalculosExtendidaMensajeCifrasPrincipio {
            get {
                return ResourceManager.GetString("CalculosExtendidaMensajeCifrasPrincipio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Result is too large.
        /// </summary>
        public static string CalculosExtendidaMensajeExceso {
            get {
                return ResourceManager.GetString("CalculosExtendidaMensajeExceso", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Could not find an alternative rule, apply the coefficient rule if possible..
        /// </summary>
        public static string CalculosExtendidaMensajeFracaso {
            get {
                return ResourceManager.GetString("CalculosExtendidaMensajeFracaso", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a All integers are divisible by one..
        /// </summary>
        public static string CalculosExtendidaMensajeUno {
            get {
                return ResourceManager.GetString("CalculosExtendidaMensajeUno", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a after separating its digits in groups of {0} beginning at the unit digit, the difference of the sum of the even groups and the odd groups is a multiple of .
        /// </summary>
        public static string CalculosExtendidaRestarFinal {
            get {
                return ResourceManager.GetString("CalculosExtendidaRestarFinal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a {0} is a divisor of {1} to the power of {2} plus one ({3})..
        /// </summary>
        public static string CalculosExtendidaRestarPrincipio {
            get {
                return ResourceManager.GetString("CalculosExtendidaRestarPrincipio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a after separating its digits in groups of {0} beginning at the unit digit, the sum of the groups is a multiple of .
        /// </summary>
        public static string CalculosExtendidaSumarFinal {
            get {
                return ResourceManager.GetString("CalculosExtendidaSumarFinal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a {0} is a divisor of {1} to the power of {2} minus one ({3})..
        /// </summary>
        public static string CalculosExtendidaSumarPrincipio {
            get {
                return ResourceManager.GetString("CalculosExtendidaSumarPrincipio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a the difference of the sum of the digits in even positions and the ones in odd positions is a multiple of .
        /// </summary>
        public static string CalculosValorUnoRestarFinal {
            get {
                return ResourceManager.GetString("CalculosValorUnoRestarFinal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a  is a divisor of {0} plus one.
        /// </summary>
        public static string CalculosValorUnoRestarPrincipio {
            get {
                return ResourceManager.GetString("CalculosValorUnoRestarPrincipio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a the sum of its digits is a multiple of .
        /// </summary>
        public static string CalculosValorUnoSumarFinal {
            get {
                return ResourceManager.GetString("CalculosValorUnoSumarFinal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a  is a divisor of {0} minus one.
        /// </summary>
        public static string CalculosValorUnoSumarPrincipio {
            get {
                return ResourceManager.GetString("CalculosValorUnoSumarPrincipio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The base is too large to represent naturally, numbers will be represented by the value of their digits in base ten..
        /// </summary>
        public static string MensajeAlfabetoNumericoExceso {
            get {
                return ResourceManager.GetString("MensajeAlfabetoNumericoExceso", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The numbers related to the dividend will be represented naturally in base {0} to facilitate reading using the following digits:.
        /// </summary>
        public static string MensajeAlfabetoNumericoExito {
            get {
                return ResourceManager.GetString("MensajeAlfabetoNumericoExito", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Applying the divisibility rule of {0}, in base {1} to {2}, using {3} digits:.
        /// </summary>
        public static string MensajeAplicarCifrasInicio {
            get {
                return ResourceManager.GetString("MensajeAplicarCifrasInicio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Keep only the least {0} significant digits: {1}.
        /// </summary>
        public static string MensajeAplicarCifrasSeparar {
            get {
                return ResourceManager.GetString("MensajeAplicarCifrasSeparar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a {0} is divisible by all the prime factors of {1}, therefore, it is divisible by {1}..
        /// </summary>
        public static string MensajeAplicarCompuestaExito {
            get {
                return ResourceManager.GetString("MensajeAplicarCompuestaExito", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a {0} isn&apos;t divisible by all the prime factors of {1}, therefore, it is not divisible by {1}..
        /// </summary>
        public static string MensajeAplicarCompuestaFracaso {
            get {
                return ResourceManager.GetString("MensajeAplicarCompuestaFracaso", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The rule did not change the dividend, {0}, cannot reduce further..
        /// </summary>
        public static string MensajeAplicarDividendoIgual {
            get {
                return ResourceManager.GetString("MensajeAplicarDividendoIgual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a {0} is divisible by {1}, therefore the original dividend, {2}, also is..
        /// </summary>
        public static string MensajeAplicarFin {
            get {
                return ResourceManager.GetString("MensajeAplicarFin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a {0} might be too large to easily determine its divisibility by {1}, but the rule cannot be applied further or may not give better results..
        /// </summary>
        public static string MensajeAplicarFinDemasiadoGrande {
            get {
                return ResourceManager.GetString("MensajeAplicarFinDemasiadoGrande", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a {0} is not divisible by {1}, therefore the original dividend, {2}, also isn&apos;t..
        /// </summary>
        public static string MensajeAplicarFinNoDivisible {
            get {
                return ResourceManager.GetString("MensajeAplicarFinNoDivisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The divisibility of {0} is estimated to be easily calculated..
        /// </summary>
        public static string MensajeAplicarFinPorTamaño {
            get {
                return ResourceManager.GetString("MensajeAplicarFinPorTamaño", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Applying the divisibility rule of {0} in base {1} to {2}, with {3} coefficients:.
        /// </summary>
        public static string MensajeAplicarInicio {
            get {
                return ResourceManager.GetString("MensajeAplicarInicio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Applying the divisibility rules of {0} in base {1} to {2}:.
        /// </summary>
        public static string MensajeAplicarInicioCompuesto {
            get {
                return ResourceManager.GetString("MensajeAplicarInicioCompuesto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The last dividend, {0}, was not lesser than the previous one, {1}.
        ///Two more iterations will be attempted..
        /// </summary>
        public static string MensajeAplicarMinimoEncontrado {
            get {
                return ResourceManager.GetString("MensajeAplicarMinimoEncontrado", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Step two: multiply each digit in the right part by the coefficient in the same position:.
        /// </summary>
        public static string MensajeAplicarMultiplicarCoeficientes {
            get {
                return ResourceManager.GetString("MensajeAplicarMultiplicarCoeficientes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The dividend, {2}, represented in base {0} is {1}..
        /// </summary>
        public static string MensajeAplicarNumero {
            get {
                return ResourceManager.GetString("MensajeAplicarNumero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The dividend, {0}, is to small for this rule, use the first coefficients, starting from the left..
        /// </summary>
        public static string MensajeAplicarParteDerechaPequeña {
            get {
                return ResourceManager.GetString("MensajeAplicarParteDerechaPequeña", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Results:.
        /// </summary>
        public static string MensajeAplicarProductoCoeficiente {
            get {
                return ResourceManager.GetString("MensajeAplicarProductoCoeficiente", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a {0} might be too large to easily determine its divisibility. Apply the rule again using {0} as the dividend..
        /// </summary>
        public static string MensajeAplicarRepeticion {
            get {
                return ResourceManager.GetString("MensajeAplicarRepeticion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Step one: separate the dividend in groups of {0} digits from the units digit, separating those in even positions from those in odd positions:
        ///Odd groups: {1}
        ///Even groups: {2}.
        /// </summary>
        public static string MensajeAplicarRestaBloques {
            get {
                return ResourceManager.GetString("MensajeAplicarRestaBloques", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Applying the divisibility rule of {0}, in base {1} to {2}, using groups of {3} digits:.
        /// </summary>
        public static string MensajeAplicarRestaInicio {
            get {
                return ResourceManager.GetString("MensajeAplicarRestaInicio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Step three: get the result of substracting both sums: {0}
        ///Can be substracted in any order, its sign won&apos;t affect the result..
        /// </summary>
        public static string MensajeAplicarRestaResta {
            get {
                return ResourceManager.GetString("MensajeAplicarRestaResta", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Step two: add all the groups from the same group.
        ///Sum of the odd groups: {0}
        ///Sum of the even groups: {1}.
        /// </summary>
        public static string MensajeAplicarRestaSuma {
            get {
                return ResourceManager.GetString("MensajeAplicarRestaSuma", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Step one: separate the number into two parts the right one has length {0}:
        ///Left: {1}
        ///Right: {2}.
        /// </summary>
        public static string MensajeAplicarSeparar {
            get {
                return ResourceManager.GetString("MensajeAplicarSeparar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Step three: add the sum of the products and the left part of the dividend:.
        /// </summary>
        public static string MensajeAplicarSuma {
            get {
                return ResourceManager.GetString("MensajeAplicarSuma", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Step one: separate the dividend into groups of {0} digits, starting at the units.
        ///Groups: {1}.
        /// </summary>
        public static string MensajeAplicarSumaBloques {
            get {
                return ResourceManager.GetString("MensajeAplicarSumaBloques", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Step two: add all the groups of digits as numbers and use the result: {0}.
        /// </summary>
        public static string MensajeAplicarSumaSuma {
            get {
                return ResourceManager.GetString("MensajeAplicarSumaSuma", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The result must be one of these numbers, written in base {1}:
        ///{0}.
        /// </summary>
        public static string MensajePosiblesCifras {
            get {
                return ResourceManager.GetString("MensajePosiblesCifras", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The base must be greater than one.
        /// </summary>
        public static string ReglaBaseMenorError {
            get {
                return ResourceManager.GetString("ReglaBaseMenorError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a For this type, the divisor must be zero..
        /// </summary>
        public static string ReglaConstructorRestriccionCero {
            get {
                return ResourceManager.GetString("ReglaConstructorRestriccionCero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a For this type, the divisor must be one..
        /// </summary>
        public static string ReglaConstructorRestriccionUno {
            get {
                return ResourceManager.GetString("ReglaConstructorRestriccionUno", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The divisor cannot be negative.
        /// </summary>
        public static string ReglaDivisorNegativoError {
            get {
                return ResourceManager.GetString("ReglaDivisorNegativoError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a Apply the rule as specified in the README using the coefficients obtained.
        /// </summary>
        public static string ReglaExpliacadaCoeficientes {
            get {
                return ResourceManager.GetString("ReglaExpliacadaCoeficientes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a No rule can be created, divisibility is not applicable with divisor zero..
        /// </summary>
        public static string ReglaExplicadaCero {
            get {
                return ResourceManager.GetString("ReglaExplicadaCero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The dividend will be divisible by {0} if, and only if, its last {1} digits in base {2} are divisible by {0}..
        /// </summary>
        public static string ReglaExplicadaCifras {
            get {
                return ResourceManager.GetString("ReglaExplicadaCifras", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The dividend will be divisible by {0} if, and only if, it is divisible by all of its prime factors at their respective powers..
        /// </summary>
        public static string ReglaExplicadaCompuesta {
            get {
                return ResourceManager.GetString("ReglaExplicadaCompuesta", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The dividend will be divisible by {0} if, and only if, the difference of the sums of all the even and odd groups of digits in base {1} of {2} digits, starting at its units digit is also divisible by {0}..
        /// </summary>
        public static string ReglaExplicadaRestar {
            get {
                return ResourceManager.GetString("ReglaExplicadaRestar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The dividend will be divisible by {0} if, and only if, the sum of all the digits in base {1} split into groups of {2} digits, starting at its units digit is also divisible by {0}..
        /// </summary>
        public static string ReglaExplicadaSumar {
            get {
                return ResourceManager.GetString("ReglaExplicadaSumar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a No rule is necessary, all integers are divisible by one..
        /// </summary>
        public static string ReglaExplicadaUno {
            get {
                return ResourceManager.GetString("ReglaExplicadaUno", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a The given rule was empty.
        /// </summary>
        public static string ReglaVaciaError {
            get {
                return ResourceManager.GetString("ReglaVaciaError", resourceCulture);
            }
        }
    }
}
